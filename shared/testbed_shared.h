#ifndef __TESTBED_SHARED_H__
#define __TESTBED_SHARED_H__

#define		__TESTBEDMEMPATCHER__					L"TestBedMemPatcherDriver"
#define		TESTBEDMP_SYS_FILE				__TESTBEDMEMPATCHER__ \
											L".sys"
// There are symbols for driver
#define		TESTBEDMP_DEVICENAME_DRV	L"\\Device\\dev" __TESTBEDMEMPATCHER__
#define		TESTBEDMP_LINKNAME_DRV 	L"\\DosDevices\\" __TESTBEDMEMPATCHER__

// There are symbols for command line app
#define		TESTBEDMP_LINKNAME_APP 	L"\\\\.\\" __TESTBEDMEMPATCHER__
#define		TESTBEDMP_SERVNAME_APP	__TESTBEDMEMPATCHER__

// Device type in user defined range
#define TESTBEDMP_DEVICE_IOCTL  0x8302

#define TESTBED_MEM_PATCHER_HIDE_PROC		(unsigned) CTL_CODE(TESTBEDMP_DEVICE_IOCTL, 0x840, METHOD_NEITHER, FILE_ANY_ACCESS)

#define TESTBED_MEM_PATCHER_READ_1_BYTE		(unsigned) CTL_CODE(TESTBEDMP_DEVICE_IOCTL, 0x840+1, METHOD_NEITHER, FILE_ANY_ACCESS)
#define TESTBED_MEM_PATCHER_WRITE_1_BYTE	(unsigned) CTL_CODE(TESTBEDMP_DEVICE_IOCTL, 0x840+2, METHOD_NEITHER, FILE_ANY_ACCESS)

typedef struct _ADDR_BYTE {
	ULONG64 addr;
	char value;
}ADDR_BYTE;

#define TESTBED_MEM_PATCHER_WRITE_8_BYTES	(unsigned) CTL_CODE(TESTBEDMP_DEVICE_IOCTL, 0x840+3, METHOD_NEITHER, FILE_ANY_ACCESS)

typedef struct _ADDR_8BYTES {
	ULONG64 addr;
	ULONG64 value;
}ADDR_8BYTES;

#endif // __TESTBED_SHARED_H__